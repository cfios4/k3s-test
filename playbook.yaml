---
- name: Install and configure k3s cluster on Alpine Linux
  hosts: all
  become: true
  vars:
    k3s_token: myk3stoken
    master_ip: "{{ hostvars[groups['masters'][0]]['ansible_host'] }}"
    node_ips: "{{ groups['nodes'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"
  
  tasks:
    - name: Enable community repo
      replace:
        path: /etc/apk/repositories
        regexp: '\B#([A-Za-z0-9]{2,})(?![~!@#$%^&*()=+_`\-\|\/'\[\]\{\}]|[?.,]*\w)://'
        replace: "https"
  
    - name: Install required packages
      apk:
        name: "{{ item }}"
      loop:
        - curl
        - iptables
        - tailscale

    - name: Get Tailscale auth-key
      shell: >
        curl -H "Authorization: Bearer {{TAILSCALEAPI}}" -d '{"capabilities":{"devices":{"create":{"reusable":false,"ephemeral":false,"preauthorized":true}}}}' https://api.tailscale.com/api/v2/tailnet/-/keys | grep -o '"key":"[^"]*"' | sed 's/"key":"\(.*\)"/\1/'
      register: tailscale_key_output
    - set_fact:
        TAILSCALEKEY: "{{tailscale_key_output.stdout}}"

    - name: Start Tailscaled service
      shell: /usr/bin/tailscaled --state=/var/lib/tailscale/tailscaled.state
      async: 60
      poll: 0
      ignore_errors: true
      
    - name: Auth Tailscale and start
      shell: tailscale up --auth-key {{TAILSCALEKEY}} --ssh
      
    - name: Install k3s
      shell: curl -fsSL https://get.k3s.io | ash
      args:
        creates: /usr/local/bin/k3s
      
    - name: Retrieve the node token from the master
      command: cat /var/lib/rancher/k3s/server/node-token
      register: node_token
      when: "'master' in group_names"
      
    - name: Configure master node
      shell: k3s server --cluster-init --token {{ k3s_token }} --force
      when: "'master' in group_names"
      
    - name: Fetch the master node's IP
      shell: tailscale ip -4
      changed_when: false
      register: master_ip
      
    - name: Join worker nodes to the master
      shell: curl -sfL https://get.k3s.io | K3S_URL="https://{{ master_ip.stdout }}:6443" K3S_TOKEN="{{ node_token.stdout }}" INSTALL_K3S_EXEC="--write-kubeconfig-mode 644" ash -
      when: "'nodes' in group_names"
